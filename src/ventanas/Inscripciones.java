/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.util.ArrayList;
import java.util.List;
import sistema_gestion_alumnos.modelo.Alumno;
import sistema_gestion_alumnos.modelo.AlumnoData;
import sistema_gestion_alumnos.modelo.Conexion;
import sistema_gestion_alumnos.modelo.Inscripcion;
import sistema_gestion_alumnos.modelo.InscripcionData;
import sistema_gestion_alumnos.modelo.Materia;
import sistema_gestion_alumnos.modelo.MateriaData;

/**
 *
 * @author Lucas
 */
public class Inscripciones extends javax.swing.JInternalFrame {

    private AlumnoData alumnoData;
    private InscripcionData inscripcionData;
    private Conexion con;
    private MateriaData materiaData;
    
    public Inscripciones() {
        initComponents();
        con = new Conexion();
        alumnoData = new AlumnoData(con);
        inscripcionData = new InscripcionData(con);
        materiaData = new MateriaData(con);
        
    }
    
    public void inicializarLista(){
        cbAlumnos.removeAllItems();
        List<Alumno> alumnos = alumnoData.obtenerAlumnos();
            boolean control;
            for(Alumno alumno : alumnos){
                control=true;
                for(int i=0;i<cbAlumnos.getItemCount();i++){
                    if(Integer.parseInt(cbAlumnos.getItemAt(i)) == alumno.getId()){
                        control=false;
                    }
                }
                if(control){
                    cbAlumnos.addItem(String.valueOf(alumno.getId()));
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbAlumnos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        rbInscriptas = new javax.swing.JRadioButton();
        rbNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMaterias = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();

        setTitle("Inscripcion o Baja Alumnos");
        setFrameIcon(null);
        setName("Inscripcion o Baja Alumnos"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Seleccione el alumno a inscribir:");

        cbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAlumnosActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Listado de Materias:");

        buttonGroup1.add(rbInscriptas);
        rbInscriptas.setText("Inscriptas");

        buttonGroup1.add(rbNoInscriptas);
        rbNoInscriptas.setText("No Inscriptas");
        rbNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoInscriptasActionPerformed(evt);
            }
        });

        jtMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Materia"
            }
        ));
        jScrollPane1.setViewportView(jtMaterias);

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(rbInscriptas)
                .addGap(76, 76, 76)
                .addComponent(rbNoInscriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(37, 37, 37))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(cbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbInscriptas)
                    .addComponent(rbNoInscriptas)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setText("Anular Inscripcion");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbInscribir)
                .addGap(27, 27, 27)
                .addComponent(jbAnular)
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnular))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.hide();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAlumnosActionPerformed
        
    }//GEN-LAST:event_cbAlumnosActionPerformed

    private void rbNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoInscriptasActionPerformed

    }//GEN-LAST:event_rbNoInscriptasActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        List<Inscripcion> inscripciones = inscripcionData.obtenerInscripciones();
        List<Materia> materias = materiaData.obtenerMaterias();
        int cont_row;
        Alumno alumno = alumnoData.buscarAlumno(Integer.parseInt(cbAlumnos.getSelectedItem().toString()));
        if(rbInscriptas.isSelected()){
            jbInscribir.setEnabled(false);
            jbAnular.setEnabled(true);
            for (int i = 0; i < jtMaterias.getRowCount(); i++) {
                for (int j = 0; j < jtMaterias.getColumnCount(); j++) {
                    jtMaterias.setValueAt("", i, j);
                }
            }
            cont_row=0;
            for(Inscripcion inscripcion : inscripciones){
                if(alumno.getId() == inscripcion.getAlumno().getId()){
                    jtMaterias.setValueAt(inscripcion.getMateria().getNombre(), cont_row, 0);
                    cont_row++;
                }
            }
        }
        else if(rbNoInscriptas.isSelected()){
            jbInscribir.setEnabled(true);
            jbAnular.setEnabled(false);
            for (int i = 0; i < jtMaterias.getRowCount(); i++) {
                for (int j = 0; j < jtMaterias.getColumnCount(); j++) {
                    jtMaterias.setValueAt("", i, j);
                }
            }
            List<Materia> materiasInscriptas = new ArrayList<>();
            cont_row=0;
            for(Inscripcion inscripcion : inscripciones){
                if(alumno.getId() == inscripcion.getAlumno().getId()){
                    materiasInscriptas.add(inscripcion.getMateria());
                }
            }
            for(Materia materia : materias){
                boolean control=true;
                for(Materia materiaInscripta : materiasInscriptas){
                    if(materia.getId() == materiaInscripta.getId()){
                        control=false;
                    }
                }
                if(control){
                    jtMaterias.setValueAt(materia.getNombre(), cont_row, 0);
                    cont_row++;
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        List<Inscripcion> inscripciones = inscripcionData.obtenerInscripciones();
        Inscripcion inscripcionABorrar = null;
        for(Inscripcion inscripcion : inscripciones){
            if(inscripcion.getAlumno().getId() == Integer.parseInt(cbAlumnos.getSelectedItem().toString())){
                if(inscripcion.getMateria().getNombre().equals(jtMaterias.getValueAt(jtMaterias.getSelectedRow(), 0).toString())){
                    inscripcionData.borrarInscripcion(inscripcion.getId());
                }
            }
        }
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        List<Materia> materias = materiaData.obtenerMaterias();
        Materia materia = null;
        Alumno alumno = alumnoData.buscarAlumno(Integer.parseInt(cbAlumnos.getSelectedItem().toString()));
        for(Materia materiaSeleccionada : materias){
            if(jtMaterias.getValueAt(jtMaterias.getSelectedRow(), 0).toString().equals(materiaSeleccionada.getNombre())){
                materia = materiaSeleccionada;
            }
        }
        Inscripcion inscripcion = new Inscripcion(alumno,materia,0.0);
        inscripcionData.guardarInscripcion(inscripcion);
    }//GEN-LAST:event_jbInscribirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbAlumnos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JTable jtMaterias;
    private javax.swing.JRadioButton rbInscriptas;
    private javax.swing.JRadioButton rbNoInscriptas;
    // End of variables declaration//GEN-END:variables

}
